/*
ABOUT
============================================================================================================
version 2.05
QT theme (stylesheet) specially developed for FreeCAD (http://www.freecadweb.org/).
It might work with other software that uses QT styling.


LICENSE
============================================================================================================
Copyright (c) 2016 Pablo Gil FernÃ¡ndez

This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/4.0/.


INSTALLATION
============================================================================================================
1) Place the .qss files and /images/ folder in the path that fits your OS:
    OSX = /Users/[YOUR_USER_NAME]/Library/Preferences/FreeCAD/Gui/Stylesheets/
    WINDOWS = C:/[INSTALLATION_PATH]/FreeCAD/data/Gui/fStylesheets/
    LINUX = /home/[YOUR_USER_NAME]/.FreeCAD/Gui/Stylesheets/

2) In order to display correctly images:
    2.1) FreeCAD 0.16 (development builds newer than commit 5b3d50a): that's it, you are done!

    2.2) FreeCAD 0.15: Images used in the theme need ABSOLUTE paths to be found by FreeCAD, so you should search the string "qss:images" (without "") and replace with the real path of your computer. It should be done with all the .qss files you want to install-use
        find = qss:images
        replace = /Users/myName/Library/Preferences/FreeCAD/Gui/Stylesheets/images


CUSTOMIZATION
============================================================================================================
If you would like to change the overall look/style of the theme, just find and replace following colors in the whole file:
    BACKGROUND (darker to ligher)
        black
        #1e1e1e
        #3c3c3c
        #4b4b4b
        #212121
        #646464
        #424242 = main background color
        #787878
        #8c8c8c
        #a0a0a0
        #b4b4b4
        #bebebe
        #2a2a2a
        #d2d2d2
        #e0e0e0
        #f5f5f5
        white

    SELECTION (darker to lighter)
        #1b3774
        #2053c0
        #3874f2
        rgb(89, 102, 120) = main selection color
        #6f9efa = used to build QSpinBox up and down buttons, it's used as color in the middle
        #7cabf9
        #adc5ed
        #cbd8e6


KNOWN BUGS and TO DO
============================================================================================================
    - please, follow the link to get updated information: http://forum.freecadweb.org/viewtopic.php?f=10&t=12417
*/


/*==================================================================================================
Reset elements
==================================================================================================*/
/* Reseting everything helps to unify styles across different operating systems */
* {
    padding: 0px;
    margin: 0px;
    border: 0px;
    border-style: none;
    border-image: none;
    outline: 0;
}

/* specific reset for elements inside QToolBar */
QToolBar * {
    margin: 0px;
    padding: 0px;
}


/*==================================================================================================
Main window
==================================================================================================*/
QMainWindow,
QDialog,
QDockWidget,
QFrame,
QToolBar  {
    background-color: #424242; /* main background color */
}

QMdiArea {
    background-image: url(qss:images/background_freecad.png);
    background-position: center center;
    background-repeat: no-repeat;
}


/*==================================================================================================
MENUS
==================================================================================================*/
QMenuBar,
QMenuBar::item {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
}

QMenu,
QMenu::item {
    color: #e0e0e0;
    background-color: #212121;
    text-decoration: none;
}

QMenuBar::item:selected,
QMenuBar::item:pressed {
    color: black;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7aa3e5, stop:1 #5680c1);
}

QMenu::item:selected,
QMenu::item:pressed {
    color: black;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7aa3e5, stop:1 #5680c1);
}

QMenu::item:disabled {
    color: #939393;
}

QMenu::right-arrow {
    width: 10px;
    height: 10px;
    image:url(qss:images/right_arrow_light.png);
    margin-right: 2px;
}

QMenu::right-arrow:selected {
    image:url(qss:images/right_arrow_lighter.png);
}

QMenu::item {
    padding: 2px 16px 2px 26px; /* make room for icon at left */
    border: 1px solid transparent; /* reserve space for selection border */
}

QMenu::icon {
    margin-left: 2px;
}

QMenu::separator {
    height: 1px;
    background-color: #373737;
    margin: 6px 4px;
}

QMenu::indicator:non-exclusive:checked {
    color: white;
}

/* Fix for elements inside a drop-down menu */
QMenu QRadioButton,
QMenu QCheckBox,
QMenu QPushButton,
QMenu QToolButton {
    color: white; /* same as regular QRadioButton and QCheckBox */
}

QMenu QRadioButton:hover,
QMenu QCheckBox:hover,
QMenu QPushButton:hover,
QMenu QToolButton:hover,
QMenu QPushButton:pressed,
QMenu QToolButton:pressed,
QMenu QPushButton:selected,
QMenu QToolButton:selected {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7aa3e5, stop:1 #5680c1); /* same as QMenu::item:selected and QMenu::item:pressed */
}

QMenu QRadioButton:disabled,
QMenu QCheckBox:disabled {
    color: #5c5c5c;
}

QMenu QRadioButton::indicator:disabled,
QMenu QCheckBox::indicator:disabled {
    color: #5c5c5c;
    background-color: transparent;
    border: 1px solid #5c5c5c;
}


/*==================================================================================================
Tool bar
==================================================================================================*/
QToolBar {
    border: none;
    padding: 2px;
}

QToolBar::handle:top,
QToolBar::handle:bottom,
QToolBar::handle:horizontal {
    background-image: url(qss:images/Hmovetoolbar_dark.png);
    width: 10px;
    margin: 4px 2px;
    background-position: top right;
    background-repeat: repeat-y;
}

QToolBar::handle:left,
QToolBar::handle:right,
QToolBar::handle:vertical {
    background-image: url(qss:images/Vmovetoolbar_dark.png);
    height: 10px;
    margin: 2px 4px;
    background-position: left bottom;
    background-repeat: repeat-x;
}

QToolBar::separator:top,
QToolBar::separator:bottom,
QToolBar::separator:horizontal {
    width: 1px;
    margin: 6px 4px;
    background-color: rgba(0,0,0,30);
}

QToolBar::separator:left,
QToolBar::separator:right,
QToolBar::separator:vertical {
    height: 1px;
    margin: 4px 6px;
    background-color: rgba(0,0,0,30);
}


/*==================================================================================================
Group box
==================================================================================================*/
QGroupBox {
    color: rgba(0,0,0,200);
    border-top: 1px solid rgba(0, 0, 0, 100); /* lighter than its own border-color */;
    margin-top: 10px;
    padding: 6px;
    /*background-color: rgba(255, 255, 255, 5);*/
}

QGroupBox:title {
    top: -8px;
    left: 12px;
}


/*==================================================================================================
Tooltip
==================================================================================================*/
QToolTip {
    color: white;
    background-color: black;
    /*opacity: 90%; doesn't correctly work */
    padding: 4px;
    border-radius: 3px; /* has no effect */
}


/*==================================================================================================
Dock widget
==================================================================================================*/
QDockWidget {
    color: black;
    titlebar-close-icon: url(qss:images/close_dark.png);
    titlebar-normal-icon: url(qss:images/undock_dark.png);
}

QDockWidget::title {
    text-align: center;
    background-color: transparent;
    border: 4px solid #424242; /* fix to simulate margin between this :title and tabs */ /* same as main background color */
    border-radius: 6px; /* bigger than normal due to previous border fix */
    padding: 4px 0px; /* also needed because of previous border fix */
}

QDockWidget::close-button,
QDockWidget::float-button {
    border: none;
    background: transparent;
    border-radius: 3px;
    subcontrol-origin: padding;
    subcontrol-position: right center;
}

QDockWidget::close-button {
    right: 4px;
}
    
QDockWidget::float-button {
    right: 22px;
}

QDockWidget::close-button:hover,
QDockWidget::float-button:hover {
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
}

QDockWidget::close-button:pressed,
QDockWidget::float-button:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(95, 95, 95), stop:1 rgb(145, 145, 145));
}

/* fix for Python Console (probably there is a smarter way to arrive to it) */
QDockWidget > QFrame {
    background-color: #2a2a2a;
    border: 1px solid #4b4b4b;
}


/*==================================================================================================
Progress bar
==================================================================================================*/
QProgressBar,
QProgressBar:horizontal {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(85, 85, 85), stop:1 rgb(85, 85, 85));
    text-align: center;
    border: 1px solid #2f2f2f;
    /*padding: 1px;*/
    border-radius: 4px;
}
QProgressBar::chunk,
QProgressBar::chunk:horizontal {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #638dcf, stop:1 #4771b3);
    border-radius: 3px;
}


/*==================================================================================================
Scroll
==================================================================================================*/
QAbstractScrollArea {
    border-radius: 2px;
    background-color: transparent;
}

QAbstractScrollArea::corner {
    border: none;
    background-color: transparent;
}

/* Horizontal scrollbar */
QScrollBar:horizontal {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #565656, stop:1 #5d5d5d);
    border: 1px solid #2f2f2f;
    height: 10px;
    margin: 1px;
    border-radius: 6px;
}

QScrollBar::handle:horizontal {
    background-color: #828282;
    min-width: 30px;
    border-radius: 5px;
}

QScrollBar::handle:horizontal:hover {
    background-color: #828282;
}

QScrollBar::sub-line:horizontal {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: left;
    subcontrol-origin: margin;
}

QScrollBar::add-line:horizontal {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: right;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal:hover,
QScrollBar::sub-line:horizontal:on {
}

QScrollBar::add-line:horizontal:hover,
QScrollBar::add-line:horizontal:on {
}

QScrollBar::up-arrow:horizontal,
QScrollBar::down-arrow:horizontal {
    background-color: none;
}

QScrollBar::add-page:horizontal,
QScrollBar::sub-page:horizontal {
    background-color: transparent;
}


/* Vertical scrollbar */
QScrollBar:vertical {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #565656, stop:1 #5d5d5d);
    border: 1px solid #2f2f2f;
    width: 10px;
    margin: 1px;
    border-radius: 6px;
}

QScrollBar::handle:vertical {
    background-color: #828282;
    min-height: 30px;
    border-radius: 5px;
}

QScrollBar::handle:vertical:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgb(155, 155, 155), stop:1 rgb(105, 105, 105));
}

QScrollBar::sub-line:vertical {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QScrollBar::add-line:vertical {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical:hover,
QScrollBar::sub-line:vertical:on {
}

QScrollBar::add-line:vertical:hover,
QScrollBar::add-line:vertical:on {
}

QScrollBar::up-arrow:vertical,
QScrollBar::down-arrow:vertical {
    background-color: none;
}

QScrollBar::add-page:vertical,
QScrollBar::sub-page:vertical {
    background-color: transparent;
}



/*==================================================================================================
Tab bar
==================================================================================================*/
QTabWidget::pane {
    background-color: transparent; /* temporal (transparent background) */ /* tab content background color */
    /*border-top: 1px solid #C2C7CB;*/
    position: absolute;
}

QTabWidget::pane:top,
QTabWidget::pane:bottom,
QTabWidget::pane:left,
QTabWidget::pane:right {
    border: 1px solid transparent; /* necessary */
}

QTabWidget::tab-bar {
    alignment: center;
}

QTabBar {
    qproperty-drawBase: 0; /* important */
    background-color: transparent;
}

/* Workaround for QTabBars created from docked QDockWidgets which don't draw the border if not set and reseted as follows: */
QTabBar {
    border: 1px solid transparent;  /* set color for all QTabBars */
    alignment: center;
}

QDockWidget QTabBar {
    border-color: transparent; /* set color for all QTabBars but ones created from QDockWidget */
}

QDialog QTabBar {
    border-color: transparent; /* set color for QTabBars inside Preferences dialog */
}
/* end fix */

QTabBar::tab {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
    border-width: 1px 1px 1px 0px;
    border-style: solid;
    border-color: #292929;
    position: center;
}

QTabBar::tab:top,
QTabBar::tab:bottom {
    min-width: 14ex;
    min-height: 20px;
    padding: 0px 8px 0px 8px;
}

QTabBar::tab:left,
QTabBar::tab:right {
    min-height: 14ex;
    min-width: 20px;
    padding: 8px 0px 8px 0px;
}

QTabBar::tab:top:first,
QTabBar::tab:bottom:first {
    border-left: 1px solid #292929;
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
}

QTabBar::tab:left:first,
QTabBar::tab:right:first {
    border-top: 1px solid #292929;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
}

QTabBar::tab:top:last,
QTabBar::tab:bottom:last {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
}

QTabBar::tab:left:last,
QTabBar::tab:right:last {
    border-bottom-right-radius: 4px;
    border-bottom-left-radius: 4px;
}

QTabBar::tab:only-one {
	border: 1px solid #292929;
	border-radius: 4px;
}

QTabBar::tab:selected {
    color: black;
}

QTabBar::tab:top:selected,
QTabBar::tab:bottom:selected {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #4771b3, stop:1 #638dcf);
    border-right-color: black;
    border-left-color: black;
}

QTabBar::tab:right:selected,
QTabBar::tab:left:selected {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #4771b3, stop:1 #638dcf);
    border-top-color: black;
    border-bottom-color: black;
}

QTabBar::tab:!selected {
    color: white;
}

QLabel, QGroupBox {
    color: white;
}

QLabel {
    background-color: transparent;
}

QLabel:disabled, QGroupBox:disabled {
    color: #b3b3b3;
}

QTabBar::tab:top:!selected:hover,
QTabBar::tab:bottom:!selected:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #4b4b4b);
}

QTabBar::tab:left:!selected:hover,
QTabBar::tab:right:!selected:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #626262, stop:1 #4b4b4b);
}

QTabBar::tab:first:selected {
    margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
}

QTabBar::tab:last:selected {
    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
}

QTabBar::tab:only-one {
    margin: 0; /* if there is only one tab, we don't want overlapping margins */
}

/* hack to access Preference TabBar background */
QDialog#Gui__Dialog__DlgPreferences > QFrame QFrame {
    background-color: transparent; /* main background color (in Windows is #424242) */
}

/* fix for previous hack that broke QTabWidget background on Windows */
QDialog#Gui__Dialog__DlgPreferences QTabWidget::pane {
    background-color: transparent; /* temporal (transparent background) */
}

/* hack to correctly align Preferences icon list on OSX */
QDialog#Gui__Dialog__DlgPreferences > QListView {
    min-width: 130px;
}

/* unique styles for sections inside Preferences */
QDialog#Gui__Dialog__DlgPreferences > QListView::item {
    border-radius: 4px;
}

QDialog#Gui__Dialog__DlgPreferences > QListView::item:hover {
    background-color: #b4b4b4;
}

QDialog#Gui__Dialog__DlgPreferences > QListView::item:selected {
    color: white;
    background-color: rgb(89, 102, 120);
}


/*==================================================================================================
Tab bar buttons
==================================================================================================*/
/* Close button */
QTabBar::close-button {
    subcontrol-origin: margin;
    subcontrol-position: center right; /* only works for QT 4.6 and newer */;
    border-radius: 2px;
    background-image: url(qss:images/close_dark.png);
    background-position: center center;
    background-repeat: none;
}

QTabBar::close-button:hover {
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
}

QTabBar::close-button:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(95, 95, 95), stop:1 rgb(145, 145, 145));
}

/* Fix for lists inside Model tab */
QDockWidget QTreeView,
QDockWidget QListView,
QDockWidget QTableView {
    margin: 6px;
    border: 1px solid #4b4b4b; /* same as regular QTreeView, QListView and QTableView */
    min-height: 40px; /* neccesary in some areas of FreeCAD */
}

/* Buttons to scroll tabs if there is not space to show all of them: */
QTabBar::scroller {
    width: 20px; /* the width of the scroll buttons */
}

QTabBar QToolButton,
QTabBar QToolButton:hover {
    background-color: #424242; /* same as main background color */
}

QTabBar QToolButton::right-arrow:enabled {
     image: url(qss:images/right_arrow_dark.png);
}

QTabBar QToolButton::right-arrow:disabled,
QTabBar QToolButton::right-arrow:off {
     image: url(qss:images/right_arrow_disabled_dark.png);
}

QTabBar QToolButton::right-arrow:hover {
     image: url(qss:images/right_arrow_darker.png);
}

 QTabBar QToolButton::left-arrow:enabled {
     image: url(qss:images/left_arrow_dark.png);
}

 QTabBar QToolButton::left-arrow:disabled,
 QTabBar QToolButton::left-arrow:off {
     image: url(qss:images/left_arrow_disabled_dark.png);
}

 QTabBar QToolButton::left-arrow:hover {
     image: url(qss:images/left_arrow_darker.png);
}

 QTabBar QToolButton::up-arrow:enabled {
     image: url(qss:images/up_arrow_dark.png);
}

 QTabBar QToolButton::up-arrow:disabled,
 QTabBar QToolButton::up-arrow:off {
     image: url(qss:images/up_arrow_disabled_dark.png);
}

 QTabBar QToolButton::up-arrow:hover {
     image: url(qss:images/up_arrow_darker.png);
}

 QTabBar QToolButton::down-arrow:enabled {
     image: url(qss:images/down_arrow_dark.png);
}

 QTabBar QToolButton::down-arrow:disabled,
 QTabBar QToolButton::down-arrow:off {
     image: url(qss:images/down_arrow_disabled_dark.png);
}

 QTabBar QToolButton::down-arrow:hover {
     image: url(qss:images/down_arrow_darker.png);
}

QTabBar::tear {
    /* default OS tear better */
}


/*==================================================================================================
Tree and list views
==================================================================================================*/
QTreeView,
QListView,
QTableView {
    color: white;
    background-color: #2a2a2a;
    alternate-background-color: #bebebe; /* related with QListView background  */
    border: 1px solid #4b4b4b; 
    selection-color: white;
    selection-background-color: rgb(89, 102, 120); /* should be similar to QListView::item selected background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
    border-radius: 3px;
}

QListView::item:hover,
QTreeView::item:hover  {
    background-color: transparent; /* fix to homogenize it on all OSs */
}

QListView::item:selected,
QTreeView::item:selected  {
    color: white; /* should be similar to QListView selection-color */
    background-color: rgb(89, 102, 120); /* should be similar to QListView selection-background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
}

/* Property Editor QTreeView (FreeCAD custom widget) */
Gui--PropertyEditor--PropertyEditor {
    gridline-color: #a0a0a0; /* same as Group header background */
}

/* fix for column items background when a link is present */
Gui--PropertyEditor--PropertyEditor > QWidget > QFrame:focus {
    background-color: #cbd8e6; /* same as focused background color */
}

/* hack to hide weird redundant information inside the value of a Placement cell */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QLabel,
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QLabel:disabled {
    color: transparent;
    background-color: transparent;
    border: none;
    border-radius: 0px;
    margin: 0px;
    padding: 0px;
}

/* hack to hide non editable cells inside Property values */
Gui--PropertyEditor--PropertyEditor QLineEdit:read-only,
Gui--PropertyEditor--PropertyEditor QLineEdit:disabled,
Gui--PropertyEditor--PropertyEditor QAbstractSpinBox:read-only,
Gui--PropertyEditor--PropertyEditor QAbstractSpinBox:disabled {
    color: transparent;
    border-color: transparent;
    background-color: transparent;
    selection-color: transparent;
    selection-background-color: transparent;
}

/* hack to disable margin inside Property values to following elements */
Gui--PropertyEditor--PropertyEditor QSpinBox,
Gui--PropertyEditor--PropertyEditor QDoubleSpinBox,
Gui--PropertyEditor--PropertyEditor QAbstractSpinBox,
Gui--PropertyEditor--PropertyEditor QLineEdit,
Gui--PropertyEditor--PropertyEditor QComboBox {
    margin-left: 0px;
    margin-right: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
}

/* reset min-height to 0px inside list views */
QTreeView > QWidget > QComboBox,
QTreeView > QWidget > QAbstractSpinBox,
QTreeView > QWidget > QSpinBox,
QTreeView > QWidget > QDoubleSpinBox,
QTreeView > QWidget > QLineEdit,
QTreeView > QWidget > QTextEdit,
QTreeView > QWidget > QPlainTextEdit,
QTreeView > QWidget > QTimeEdit,
QTreeView > QWidget > QDateEdit,
QTreeView > QWidget > QDateTimeEdit,
QTreeView > QWidget > Gui--ColorButton {
    min-height: 0px;
}

/* set border-radius to 0px inside list views */
QTreeView > QWidget > QComboBox,
QTreeView > QWidget > QAbstractSpinBox,
QTreeView > QWidget > QSpinBox,
QTreeView > QWidget > QDoubleSpinBox,
QTreeView > QWidget > QLineEdit,
QTreeView > QWidget > QTextEdit,
QTreeView > QWidget > QPlainTextEdit,
QTreeView > QWidget > QTimeEdit,
QTreeView > QWidget > QDateEdit,
QTreeView > QWidget > QDateTimeEdit,
QTreeView > QWidget > QComboBox:drop-down,
QTreeView > QWidget > QAbstractSpinBox:up-button,
QTreeView > QWidget > QSpinBox:up-button,
QTreeView > QWidget > QDoubleSpinBox:up-button,
QTreeView > QWidget > QTimeEdit:up-button,
QTreeView > QWidget > QDateEdit:up-button,
QTreeView > QWidget > QDateTimeEdit:up-button,
QTreeView > QWidget > QAbstractSpinBox:down-button,
QTreeView > QWidget > QSpinBox:down-button,
QTreeView > QWidget > QDoubleSpinBox:down-button,
QTreeView > QWidget > QTimeEdit:down-button,
QTreeView > QWidget > QDateEdit:down-button,
QTreeView > QWidget > QDateTimeEdit:down-button,
QTreeView > QWidget > Gui--ColorButton {
    border-radius: 0px;
}

/* set focus colors to best viewing the editable fields */
QTreeView > QWidget > QComboBox:focus {
    border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242); /* same as focused background color */
    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242); /* same as focused background color */
    border-top-color: #373737;
    border-bottom-color: #424242;
}

/* set focus colors to best viewing the editable fields */
QTreeView > QWidget > QAbstractSpinBox:focus,
QTreeView > QWidget > QSpinBox:focus,
QTreeView > QWidget > QDoubleSpinBox:focus,
QTreeView > QWidget > QLineEdit:focus,
QTreeView > QWidget > QTextEdit:focus,
QTreeView > QWidget > QPlainTextEdit:focus,
QTreeView > QWidget > QTimeEdit:focus,
QTreeView > QWidget > QDateEdit:focus,
QTreeView > QWidget > QDateTimeEdit:focus {
    border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(85, 85, 85), stop:1 rgb(85, 85, 85)); /* same as focused background color */
    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(85, 85, 85), stop:1 rgb(85, 85, 85)); /* same as focused background color */
    border-top-color: rgb(85, 85, 85);
    border-bottom-color: rgb(85, 85, 85);

}

QTreeView > QWidget > QAbstractSpinBox:read-only,
QTreeView > QWidget > QSpinBox:read-only,
QTreeView > QWidget > QDoubleSpinBox:read-only,
QTreeView > QWidget > QLineEdit:read-only,
QTreeView > QWidget > QTextEdit:read-only,
QTreeView > QWidget > QPlainTextEdit:read-only,
QTreeView > QWidget > QTimeEdit:read-only,
QTreeView > QWidget > QDateEdit:read-only,
QTreeView > QWidget > QDateTimeEdit:read-only {
    color: transparent;
    background-color: transparent;
    border-color: transparent;
}

/* Fix to correctly (not totally) draw QTextEdit on OSX at Page properties: "Page result", "Template" and "Editable Texts" */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QWidget {
    min-height: 14px;
    border-radius: 0px; /* reset */
}


/*==================================================================================================
Header of tree and list views
==================================================================================================*/
QHeaderView {
    color: white;
    background-color: #4b4b4b;
    border-top-left-radius: 2px; /* 1px less than its container */
    border-top-right-radius: 2px; /* 1px less than its container */
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
}

QHeaderView::section {
    border:none;
    padding: 4px 6px;
    background-color: #4b4b4b;
}

QHeaderView::section:horizontal {
    padding: 4px 6px; /* left and right value similar to QHeaderView::section */
    border-right: 1px solid rgba(255,255,255,30);
}

QHeaderView::section:vertical {
    border-bottom: 1px solid rgba(255,255,255,30);
}

QTableCornerButton::section {
    background-color: #4b4b4b;
    border-top: none;
    border-left: none;
    border-right: 1px solid rgba(255,255,255,30);
    border-bottom: 1px solid rgba(255,255,255,30);
}

QHeaderView::section:last {
    border-right: none;
}

QHeaderView::up-arrow {
    image: url(qss:images/up_arrow_light.png);
}

QHeaderView::up-arrow:hover {
    image: url(qss:images/up_arrow_lighter.png);
}

QHeaderView::down-arrow {
    image: url(qss:images/down_arrow_light.png);
}

QHeaderView::down-arrow:hover {
    image: url(qss:images/down_arrow_lighter.png);
}

/* Group header inside Property Editor (FreeCAD custom widget) */
Gui--PropertyEditor--PropertyEditor {
    qproperty-groupTextColor: #4b4b4b;
    qproperty-groupBackground: #8c8c8c;
}


/*==================================================================================================
Branch system for QTreeViews
==================================================================================================*/
QTreeView::branch  {
    background: transparent;
}

QTreeView::branch:has-siblings:!adjoins-item  {
    border-image: url(qss:images/branch_vline.png) 0;
}

QTreeView::branch:has-siblings:adjoins-item  {
    border-image: url(qss:images/branch_more.png) 0;
}

QTreeView::branch:!has-children:!has-siblings:adjoins-item  {
    border-image: url(qss:images/branch_end.png) 0;
}

QTreeView::branch:closed:has-children:has-siblings  {
    image: url(qss:images/branch_closed_light.png);
}

QTreeView::branch:has-children:!has-siblings:closed  {
    image: url(qss:images/branch_closed_light.png);
    border-image: url(qss:images/branch_end.png) 0;
}

QTreeView::branch:open:has-children:has-siblings  {
    image: url(qss:images/branch_open_light.png);
    border-image: url(qss:images/branch_more.png) 0;
}

QTreeView::branch:open:has-children:!has-siblings  {
    image: url(qss:images/branch_open_light.png);
    border-image: url(qss:images/branch_end.png) 0;
}


/*==================================================================================================
Splitter and windows separator
==================================================================================================*/
QSplitter::handle {
    margin: 0px;
    padding: 0px;
}

QSplitter::handle:horizontal {
    width: 2px;
    margin: 0px;
    padding: 0px;
    background-position: center center;
    background-repeat: repeat-y;
}

QSplitter::handle:vertical {
    height: 2px;
    margin: 0px;
    padding: 0px;
    background-position: center center;
    background-repeat: repeat-x;
}

/* Similar to the splitter is the following window separator (but horizontal/vertical is on the opposite way) */
QMainWindow::separator {
    background-position: center center;
    background-repeat: none;
}

QMainWindow::separator:horizontal {
    width: 2px;
    margin: 0px;
    padding: 0px;
    background-image: url(qss:images_blender/horizontal_line.png);
    background-position: center center;
    background-repeat: repeat-x;
}

QMainWindow::separator:vertical {
    height: 2px;
    margin: 0px;
    padding: 0px;
    background-image: url(qss:images_blender/vertical_line.png);
    background-position: center center;
    background-repeat: repeat-y;
}



/*==================================================================================================
Tasks panel (custom FreeCAD class)
==================================================================================================*/
/* Action group */
QFrame[class="panel"] {
    background-color: transparent; /* temporal (transparent background) */
}

QSint--ActionGroup {
    padding: 0px; /* if not reset, it might create problems with QPushButtons and other elements */
    margin: 0px; /* if not reset, it might create problems with QPushButtons and other elements */
}

/* Separator line */
QSint--ActionGroup QFrame[height="1"],
QSint--ActionGroup QFrame[height="2"],
QSint--ActionGroup QFrame[height="3"],
QSint--ActionGroup QFrame[width="1"],
QSint--ActionGroup QFrame[width="2"],
QSint--ActionGroup QFrame[width="3"] {
    border-color: rgba(0,0,0,60);
}

/* Panel header */
QSint--ActionGroup QFrame[class="header"] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #808080, stop:1 #525252); /* Task Panel Header background color */
    border: 1px solid #525252; /* same as darker background-color */
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
    margin: 0px;
    padding: 0px;
}

QSint--ActionGroup QFrame[class="header"]:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(95, 95, 95), stop:1 #5c5c5c);
}

QSint--ActionGroup QToolButton[class="header"] {
    color: black; /* Task Panel Header text color */
    text-align: left;
    font-weight: bold;
    border: none;
    margin: 0px;
    padding: 0px;
}

QSint--ActionGroup QFrame[class="header"] QLabel {
    background-color: transparent;
    background-image: url(qss:images/down_arrow_dark.png);
    background-repeat: none;
    background-position: center center;
    padding: 0px;
    margin: 0px;
}

QSint--ActionGroup QFrame[class="header"] QLabel:hover {
    background-color: transparent;
    background-image: url(qss:images/down_arrow_darker.png);
}

QSint--ActionGroup QFrame[class="header"] QLabel[fold="true"] {
    background-color: transparent;
    background-image: url(qss:images/up_arrow_dark.png);
    background-repeat: none;
    background-position: center center;
    padding: 0px;
    margin: 0px;
}

QSint--ActionGroup QFrame[class="header"] QLabel[fold="true"]:hover {
    background-color: transparent;
    background-image: url(qss:images/up_arrow_darker.png);
}

QSint--ActionGroup QFrame[class="content"] {
    background-color: rgb(95, 95, 95); /* Task Panel background color */
    border: 1px solid #525252;
    border-top: none;
    margin: 0px;
    padding: 0px;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px;
}

QSint--ActionGroup QFrame[class="content"] > QWidget {
    background-color: #8c8c8c; /* Task Panel background color */
}

/* Fixs for tabs inside Task Panel */
QSint--ActionGroup QFrame[class="content"] QTabBar::tab:top:selected {
    border-bottom-color: #8c8c8c; /* same as Task Panel background color */
}

QSint--ActionGroup QFrame[class="content"] QTabBar::tab:bottom:selected {
    border-top-color: #8c8c8c; /* same as Task Panel background color */
}

QSint--ActionGroup QFrame[class="content"] QTabBar::tab:right:selected {
    border-right-color: #8c8c8c; /* same as Task Panel background color */
}

QSint--ActionGroup QFrame[class="content"] QTabBar::tab:left:selected {
    border-left-color: #8c8c8c; /* same as Task Panel background color */
}

/* Fix for buttons with icons that showed cropped (still not happy with result) */
QSint--ActionGroup QFrame[class="content"] > QWidget > QPushButton {
    padding: 2px; /* bigger padding crops text and icons... */
    margin: 0px;
}


/*==================================================================================================
Buttons
==================================================================================================*/
/* Common */
QAbstractSpinBox,
QSpinBox,
QDoubleSpinBox,
QLineEdit,
QTextEdit,
QPlainTextEdit,
QTimeEdit,
QDateEdit,
QDateTimeEdit {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(58, 58, 58), stop:1 rgb(58, 58, 58));
    selection-color: white;
    selection-background-color: #212121;
    border: 1px solid #2f2f2f;
    border-radius: 4px;
    min-width: 50px; /* it ensures the default value is correctly displayed */
    min-height: 20px; /* important to be a pair number in order to up/down buttons to be divisible by two (if not set could create a blank line in Ubuntu. Its downside is that it's needed to reset it (min-width: 0px) on following elements that can't have it such as fields inside QToolBar and inside QTreeView (Property editor) */
    padding: 1px 2px; /* temporal: could don't be compatible with elements inside Tree/List view */
}

QAbstractSpinBox:hover,
QSpinBox:hover,
QDoubleSpinBox:hover,
QLineEdit:hover,
QTextEdit:hover,
QPlainTextEdit:hover,
QTimeEdit:hover,
QDateEdit:hover,
QDateTimeEdit:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(65, 65, 65), stop:1 rgb(65, 65, 65));
}

/* shifts text/number editable field to the left to make space for the up/down or drop-down buttons */
QComboBox,
QAbstractSpinBox,
QSpinBox,
QDoubleSpinBox,
QTimeEdit,
QDateEdit,
QDateTimeEdit {
    padding-right: 0px; /* temporal */
}

QAbstractSpinBox:focus,
QSpinBox:focus,
QDoubleSpinBox:focus,
QLineEdit:focus,
QTextEdit:focus,
QPlainTextEdit:focus,
QTimeEdit:focus,
QDateEdit:focus,
QDateTimeEdit:focus {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(85, 85, 85), stop:1 rgb(85, 85, 85));
}

QAbstractSpinBox:disabled,
QSpinBox:disabled,
QDoubleSpinBox:disabled,
QLineEdit:disabled,
QTextEdit:disabled,
QPlainTextEdit:disabled,
QTimeEdit:disabled,
QDateEdit:disabled,
QDateTimeEdit:disabled {
    color: #787878;
    background-color: #212121; /* same as enabled color */
    border-color: #212121; /* same as enabled color */
}

QAbstractSpinBox:up-button,
QSpinBox:up-button,
QDoubleSpinBox:up-button,
QTimeEdit:up-button,
QDateEdit:up-button,
QDateTimeEdit:up-button,
QAbstractSpinBox:down-button,
QSpinBox:down-button,
QDoubleSpinBox:down-button,
QTimeEdit:down-button,
QDateEdit:down-button,
QDateTimeEdit:down-button {
    background-color: transparent; /* same color for QComboBox background-color */
    subcontrol-origin: border; /* important */
    width: 20px; /* same as QComboBox ... QDateTimeEdit padding-right */
}

QAbstractSpinBox:up-button,
QSpinBox:up-button,
QDoubleSpinBox:up-button,
QTimeEdit:up-button,
QDateEdit:up-button,
QDateTimeEdit:up-button {
    subcontrol-position: top right;
    border-top-right-radius: 3px;
}

QAbstractSpinBox:down-button,
QSpinBox:down-button,
QDoubleSpinBox:down-button,
QTimeEdit:down-button,
QDateEdit:down-button,
QDateTimeEdit:down-button {
    subcontrol-position: bottom right;
    border-bottom-right-radius: 3px;
}

/*QAbstractSpinBox:up-button:focus,
QSpinBox:up-button:focus,
QDoubleSpinBox:up-button:focus,
QTimeEdit:up-button:focus,
QDateEdit:up-button:focus,
QDateTimeEdit:up-button:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #6f9efa, stop:1 #7cabf9);
}

QAbstractSpinBox:down-button:focus,
QSpinBox:down-button:focus,
QDoubleSpinBox:down-button:focus,
QTimeEdit:down-button:focus,
QDateEdit:down-button:focus,
QDateTimeEdit:down-button:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 rgb(89, 102, 120), stop:1 #6f9efa);
}*/

QAbstractSpinBox:up-button:disabled,
QSpinBox:up-button:disabled,
QDoubleSpinBox:up-button:disabled,
QTimeEdit:up-button:disabled,
QDateEdit:up-button:disabled,
QDateTimeEdit:up-button:disabled,
QAbstractSpinBox:down-button:disabled,
QSpinBox:down-button:disabled,
QDoubleSpinBox:down-button:disabled,
QTimeEdit:down-button:disabled,
QDateEdit:down-button:disabled,
QDateTimeEdit:down-button:disabled {
    background-color: transparent;
}

QAbstractSpinBox::up-arrow,
QSpinBox::up-arrow,
QDoubleSpinBox::up-arrow,
QTimeEdit::up-arrow,
QDateEdit::up-arrow,
QDateTimeEdit::up-arrow {
    image: url(qss:images/up_arrow_dark.png);
    top: 2px; /* fix symmetry between up and down images */
}

QAbstractSpinBox::up-arrow:focus,
QSpinBox::up-arrow:focus,
QDoubleSpinBox::up-arrow:focus,
QTimeEdit::up-arrow:focus,
QDateEdit::up-arrow:focus,
QDateTimeEdit::up-arrow:focus {
    image: url(qss:images/up_arrow_dark.png);
}

QAbstractSpinBox::up-arrow:focus:hover,
QSpinBox::up-arrow:focus:hover,
QDoubleSpinBox::up-arrow:focus:hover,
QTimeEdit::up-arrow:focus:hover,
QDateEdit::up-arrow:focus:hover,
QDateTimeEdit::up-arrow:focus:hover {
    image: url(qss:images/up_arrow_darker.png);
}

QAbstractSpinBox::up-arrow:off,
QSpinBox::up-arrow:off,
QDoubleSpinBox::up-arrow:off,
QTimeEdit::up-arrow:off,
QDateEdit::up-arrow:off,
QDateTimeEdit::up-arrow:off {
    image: url(qss:images/up_arrow_disabled_dark.png);
}

QAbstractSpinBox::up-arrow:disabled,
QSpinBox::up-arrow:disabled,
QDoubleSpinBox::up-arrow:disabled,
QTimeEdit::up-arrow:disabled,
QDateEdit::up-arrow:disabled,
QDateTimeEdit::up-arrow:disabled {
    image: url(qss:images/up_arrow_disabled_dark.png);
}

QAbstractSpinBox::down-arrow,
QSpinBox::down-arrow,
QDoubleSpinBox::down-arrow,
QTimeEdit::down-arrow,
QDateEdit::down-arrow,
QDateTimeEdit::down-arrow {
    image: url(qss:images/down_arrow_dark.png);
    bottom: 0px; /* fix simetry between up and down images */
}

QAbstractSpinBox::down-arrow:focus,
QSpinBox::down-arrow:focus,
QDoubleSpinBox::down-arrow:focus,
QTimeEdit::down-arrow:focus,
QDateEdit::down-arrow:focus,
QDateTimeEdit::down-arrow:focus {
    image: url(qss:images/down_arrow_dark.png);
}

QAbstractSpinBox::down-arrow:focus:hover,
QSpinBox::down-arrow:focus:hover,
QDoubleSpinBox::down-arrow:focus,
QTimeEdit::down-arrow:focus:hover,
QDateEdit::down-arrow:focus:hover,
QDateTimeEdit::down-arrow:focus:hover {
    image: url(qss:images/down_arrow_darker.png);
}

QAbstractSpinBox::down-arrow:off,
QSpinBox::down-arrow:off,
QDoubleSpinBox::down-arrow:off,
QTimeEdit::down-arrow:off,
QDateEdit::down-arrow:off,
QDateTimeEdit::down-arrow:off {
    image: url(qss:images/down_arrow_disabled_dark.png);
}

QAbstractSpinBox::down-arrow:disabled,
QSpinBox::down-arrow:disabled,
QDoubleSpinBox::down-arrow:disabled,
QTimeEdit::down-arrow:disabled,
QDateEdit::down-arrow:disabled,
QDateTimeEdit::down-arrow:disabled {
    image: url(qss:images/down_arrow_disabled_dark.png);
}

/* ComboBox */
QComboBox {
    color: #dadada;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
    selection-color: white;
    selection-background-color: #3874f2;
    border: 1px solid #2f2f2f;
    border-radius: 4px;
    min-width: 50px; /* it ensures the default value is correctly displayed */
    min-height: 20px; /* important to be a pair number in order to up/down buttons to be divisible by two (if not set could create a blank line in Ubuntu. Its downside is that it's needed to reset it (min-width: 0px) on following elements that can't have it such as fields inside QToolBar and inside QTreeView (Property editor) */
    padding: 1px 2px; /* temporal: could don't be compatible with elements inside Tree/List view */
}

QComboBox:hover {
	color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #4b4b4b);
}

QComboBox:on,
QComboBox:focus {
	color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
}

QComboBox:disabled {
    color: #787878;
    background-color: #212121; /* same as enabled color */
    border-color: #212121; /* same as enabled color */
}

QComboBox::drop-down {
    background-color: transparent; /* same color as up/down QSpinBox ... QDateTimeView background-color */
    border: 1px solid transparent;
    border-left-color: transparent;
    subcontrol-origin: border; /* important */
    subcontrol-position: top right;
    width: 20px;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
}

QComboBox::drop-down:on,
QComboBox::drop-down:focus {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
}

QComboBox::down-arrow {
    image: url(qss:images/down_arrow_light.png);
}

QComboBox::down-arrow:on,
QComboBox::down-arrow:focus {
    image: url(qss:images/down_arrow_lighter.png);
}

QComboBox::down-arrow:off,
QComboBox::down-arrow:disabled {
    image: url(qss:images/down_arrow_disabled_dark.png);
}

/* ComboBox menu */
QComboBox QAbstractItemView {
    color: white; /* same as regular QComboBox color */
    background-color: rgba(0,0,0,200);
    selection-color: black;
    selection-background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7aa3e5, stop:1 #5680c1);
    border-width: 5px 0px 5px 0px;
    border-style: solid;
    border-color: transparent;
    margin: 0px -1px 0px 0px; /* hack for Mac... try it on Windows and Linux */
}


/*==================================================================================================
Push button
==================================================================================================*/
QPushButton {
    color: white;
    text-align: center;
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
    border-bottom-color: black; /* simulates shadow under the button */
    padding: 4px 8px;
    margin: 4px 4px;
    min-height: 16px; /* same as QTabBar QPushButton min-width */
    border-radius: 4px;
}

QPushButton:hover,
QPushButton:focus {
    background-color: #828282;
}

QPushButton:disabled,
QPushButton:disabled:checked {
    color: #232323;
    background-color: #565656;
    border-color: #5b5b5b;
}

QPushButton:pressed {
	color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #555555, stop:1 #717171);
}

QPushButton:checked {
    background-color: rgb(89, 102, 120);
    border-color: #3874f2;
}

/* Color Buttons */
Gui--ColorButton,
Gui--ColorButton:disabled {
    padding: 0px; /* reset */
    margin: 0px; /* reset */
}

Gui--ColorButton {
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
    border-bottom-color: black; /* simulates shadow under the button */
}

Gui--ColorButton:disabled {
    background-color: #565656;
    border-color: #5b5b5b;
}

Gui--ColorButton:hover,
Gui--ColorButton:focus {
    background-color: #828282;
}

Gui--ColorButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #555555, stop:1 #717171);
}

/* Pushbutton style for "..." inside Placement cell which launches Placement tool */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton {
    color: #dadada;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
    border: 1px solid #2f2f2f;
    min-width: 16px; /* reset it due to larger value on regular QPushButton, same or bigger value as regular QPushButton min-height */
    border-radius: 0px;
    margin: 0px; /* reset */
    padding: 0px; /* reset */
    border-radius: 3px;
}

Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton:hover {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #4b4b4b);
}

Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton:pressed {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
}

/* Fix for Expressions description QFrame that is "broken" with initial reset */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QWidget > QWidget > QFrame {
    background-color: #424242; /* main background color */
    border: 1px solid #212121;
    border-radius: 2px;
    padding: 2px 6px;
}

QPushButton:checked {
    background-color: rgb(89, 102, 120);
    border-color: #3874f2;
}


/*==================================================================================================
Tool button inside QDialogs that works as QPushButtons
==================================================================================================*/
/* found under Tools -> Customize -> Macros -> Pixmap "..." button */
QDialog QToolButton {
    color: white;
    text-align: center;
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
    border-bottom-color: black; /* simulates shadow under the button */
    padding: 0px; /* different than regular QPushButton */
    margin: 2px; /* different than regular QPushButton */
    min-height: 16px; /* same as QTabBar QPushButton min-width */
    border-radius: 4px;
}

QDialog QToolButton:hover,
QDialog QToolButton:focus {
    background-color: #828282;
}

QDialog QToolButton:disabled,
QDialog QToolButton:disabled:checked {
    color: #232323;
    background-color: #565656;
    border-color: #5b5b5b;
}

QToolButton {
    color: white;
}

QToolButton:checked {
    color: white;
    background-color: rgba(250, 250, 250, 80);
}

/*==================================================================================================
Tool button inside Task Panel content that works as QPushButtons
==================================================================================================*/
/* found inside Part Design Workbench and "make a draft on a face" Task panel options */
QSint--ActionGroup QFrame[class="content"] QToolButton {
    color: black;
    text-align: center;
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
    border-bottom-color: black; /* simulates shadow under the button */
    padding: 2px 6px; /* different than regular QPushButton */
    margin: 2px; /* different than regular QPushButton */
    min-height: 16px; /* same as QTabBar QPushButton min-width */
    border-radius: 4px;
}

QSint--ActionGroup QFrame[class="content"] QToolButton:hover,
QSint--ActionGroup QFrame[class="content"] QToolButton:focus {
    background-color: #828282;
}

QSint--ActionGroup QFrame[class="content"] QToolButton:disabled,
QSint--ActionGroup QFrame[class="content"] QToolButton:disabled:checked {
    color: #232323;
    background-color: #565656;
    border-color: #5b5b5b;

}

QSint--ActionGroup QFrame[class="content"] QToolButton:pressed {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #555555, stop:1 #717171);
}


/*==================================================================================================
Radio button
==================================================================================================*/
QRadioButton::indicator:unchecked {
    color: black;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
    border: 1px solid #292929;
}

QRadioButton::indicator:unchecked:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #4b4b4b);
}

QRadioButton::indicator:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
    border: 1px solid #292929; /* QCheckBox has the same color */
    image:url(qss:images/radiobutton_light.png);
}

QRadioButton,
QRadioButton:disabled {
    padding: 3px;
    outline: none;
    background-color: transparent;
}

QRadioButton {
    color: white;
}

QRadioButton:disabled {
    color: #5c5c5c;
}

QRadioButton::indicator {
    width: 11px;
    height: 11px;
    border-radius: 6px;
}

QRadioButton::indicator:disabled {
    border: 1px solid #5c5c5c;
}

QRadioButton::indicator:disabled {
    color: #5c5c5c;
    background-color: transparent;
}

QRadioButton:focus {
    border: none;
}


/*==================================================================================================
Checkbox
==================================================================================================*/

QGroupBox,
QGroupBox:disabled,
QCheckBox,
QCheckBox:disabled {
    color: white;
    padding: 3px;
    outline: none;
    background-color: transparent;
}

QGroupBox::indicator,
QCheckBox::indicator {
    color: black;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
    border: 1px solid #292929;
    width: 11px;
    height: 11px;
    border-radius:2px;
}

QGroupBox::indicator:hover,
QCheckBox::indicator:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #4b4b4b);
}

QGroupBox::indicator:pressed,
QGroupBox::indicator:non-exclusive:checked:pressed,
QGroupBox::indicator:indeterminate:pressed,
QGroupBox::indicator:checked:pressed,
QCheckBox::indicator:pressed,
QCheckBox::indicator:non-exclusive:checked:pressed,
QCheckBox::indicator:indeterminate:pressed,
QCheckBox::indicator:checked:pressed {
    border-color: #292929; /* same as not pressed... just to disable the effect without deleting the code */
}

QGroupBox::indicator:checked,
QCheckBox::indicator:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
    border: 1px solid #292929; /* QCheckBox has the same color */
    image:url(qss:images/checkbox_light.png);
}


QGroupBox:disabled,
QCheckBox:disabled {
    color: #5c5c5c;
    background-color: transparent;
}

QGroupBox::indicator:disabled,
QCheckBox::indicator:disabled {
    background-color: transparent;
    border: 1px solid #5c5c5c;
}

QGroupBox::indicator:indeterminate,
QCheckBox::indicator:indeterminate {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
    border: 1px solid #292929; /* QCheckBox has the same color */
    image: url(qss:images/checkbox_indeterminate_light.png);
}


/*==================================================================================================
Checkboxs inside QListWidget and QTreeView
==================================================================================================*/
QListWidget::indicator,
QTreeView::indicator {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #424242, stop:1 #373737);
    border: 1px solid #292929;
    width: 11px;
    height: 11px;
    border-radius:2px;
}

/* fix for QTreeView::indicator loosing its margin */
QTreeView::indicator {
    margin: 3px;
}

QListWidget::indicator:hover,
QTreeView::indicator:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #4b4b4b);
}

QListWidget::indicator:selected,
QTreeView::indicator:selected {
    background-color: #e6e6e6;
}

QListWidget::indicator:checked:selected,
QListWidget::indicator:indeterminate:selected,
QTreeView::indicator:checked:selected,
QTreeView::indicator:indeterminate:selected {
    background-color: #7cabf9; /* slighly lighter than default */
    border-color: #2053c0; /* slighly darker than default */
}

QListWidget::indicator:pressed,
QListWidget::indicator:non-exclusive:checked:pressed,
QListWidget::indicator:indeterminate:pressed,
QListWidget::indicator:checked:pressed,
QTreeView::indicator:pressed,
QTreeView::indicator:non-exclusive:checked:pressed,
QTreeView::indicator:indeterminate:pressed,
QTreeView::indicator:checked:pressed {
    border-color: #292929; /* same as not pressed... just to disable the effect without deleting the code */
}

QListWidget::indicator:checked,
QTreeView::indicator:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
    border: 1px solid #292929; /* QCheckBox has the same color */
    image:url(qss:images/checkbox_light.png);
}

QListWidget::indicator:disabled,
QTreeView::indicator:disabled {
    background-color: transparent;
    border: 1px solid #5c5c5c;
}

QListWidget::indicator:indeterminate,
QTreeView::indicator:indeterminate {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #373737, stop:1 #424242);
    border: 1px solid #292929; /* QCheckBox has the same color */
    image: url(qss:images/checkbox_indeterminate_light.png);
}


/*==================================================================================================
Slider
==================================================================================================*/
QSlider,
QSlider:active,
QSlider:!active {
    border: none;
    background-color: transparent;
}

QSlider:horizontal {
    padding: 0px 10px;
}

QSlider:vertical {
    padding: 10px 0px;
}

QSlider::add-page:horizontal {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(58, 58, 58), stop:1 rgb(58, 58, 58));
}

QSlider::sub-page:horizontal {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7f7f7f, stop:1 #6c6c6c);
}

QSlider::add-page:vertical {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgb(58, 58, 58), stop:1 rgb(58, 58, 58));
}

QSlider::sub-page:vertical {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #7f7f7f, stop:1 #6c6c6c);
}

QSlider::add-page:horizontal {
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    border: 1px solid #393939;
    border-left: none;
}

QSlider::sub-page:horizontal {
    border-top-left-radius: 6px;
    border-bottom-left-radius: 6px;
    border: 1px solid #393939;
    border-right: none;
}

QSlider::sub-page:vertical {
    border-top-right-radius: 6px;
    border-top-left-radius: 6px;
    border: 1px solid #393939;
    border-bottom: none;
}

QSlider::add-page:vertical {
    border-bottom-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border: 1px solid #393939;
    border-top: none;
}

QSlider::add-page:horizontal:disabled,
QSlider::sub-page:horizontal:disabled,
QSlider::add-page:vertical:disabled,
QSlider::sub-page:vertical:disabled {
    border-color: #5c5c5c;
    background-color: rgba(0,0,0,10);
}


QSlider::groove {
    background-color: transparent; /* don't delete, it's necessary */
    border: 1px solid transparent; /* don't delete, it's necessary */
    margin: 0px;
}

QSlider::groove:horizontal {
    height: 18px;
}

QSlider::groove:vertical {
    width: 18px;
}

QSlider::groove:horizontal:disabled,
QSlider::groove:vertical:disabled {
    border-color: transparent;
    background-color: transparent;
}

QSlider::handle:horizontal {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7f7f7f, stop:1 #6c6c6c);
    border: 1px solid qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #7f7f7f, stop:1 #6c6c6c);
    width: 1px;
    margin: 0px 4px; /* necessary in order to not break border radius when reaching limits */
}

QSlider::handle:vertical {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #7f7f7f, stop:1 #6c6c6c);
    border: 1px solid qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #7f7f7f, stop:1 #6c6c6c);
    height: 1px;
    margin: 4px 0px; /* necessary in order to not break border radius when reaching limits */
}

QSlider::handle:horizontal:hover,
QSlider::handle:horizontal:pressed {
    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #707070, stop:1 #5c5c5c);
    border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #707070, stop:1 #5c5c5c);
    border-top-color: #707070;
    border-bottom-color: #5c5c5c;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #707070, stop:1 #5c5c5c);
}

QSlider::handle:vertical:hover,
QSlider::handle:vertical:pressed {
    border-top-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #707070, stop:1 #5c5c5c);
    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #707070, stop:1 #5c5c5c);
    border-left-color: #707070;
    border-right-color: #5c5c5c;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #707070, stop:1 #5c5c5c);
}

QSlider::handle:horizontal:disabled,
QSlider::handle:vertical:disabled {
    border-color: transparent;
    background-color: transparent;
}


/*==================================================================================================
Toolbar buttons
==================================================================================================*/
/*QToolBar > QComboBox,   disabled because creates different margins for body and drop-down button */
QToolBar > QAbstractSpinBox,
QToolBar > QSpinBox,
QToolBar > QDoubleSpinBox,
QToolBar > QLineEdit,
QToolBar > QTextEdit,
QToolBar > QPlainTextEdit,
QToolBar > QTimeEdit,
QToolBar > QDateEdit,
QToolBar > QDateTimeEdit {
    margin: 0px 2px;
    padding: 0px;
    min-width: 70px; /* necessary to show its content */
}

QToolBar > QComboBox,
QToolBar > QAbstractSpinBox,
QToolBar > QSpinBox,
QToolBar > QDoubleSpinBox,
QToolBar > QLineEdit,
QToolBar > QTextEdit,
QToolBar > QPlainTextEdit,
QToolBar > QTimeEdit,
QToolBar > QDateEdit,
QToolBar > QDateTimeEdit {
    min-height: 0px; /* reset it inside Tool Bar due to the user ability to set the "size of toolbar icons" inside Preferences  */
}

QToolBar > QPushButton {
    padding: 0px;
    margin: 1px; /* doesn't work with :left, :right:, :top or :bottom sub-controls */
    min-width: 16px; /* could not be larger due to switchable Preferences "Size of toolbar icons" */
    min-height: 16px; /* could not be larger due to switchable Preferences "Size of toolbar icons" */
    border-radius: 4px; /* same as regular QPushButton */
}

QToolBar > QPushButton:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #638dcf, stop:1 #4771b3);
    border: 1px solid black;
}

QToolBar > QPushButton:!checked {
    background-color: #5f5f5f;
    border: 1px solid #2f2f2f;
    border-bottom-color: black; /* simulates shadow under the button */
}

QToolBar > QPushButton:checked:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #6f96d3, stop:1 #557cba);
}

QToolBar > QPushButton:!checked:hover {
    background-color: #828282;
}

QToolBar > QPushButton:checked:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #4771b3, stop:1 #638dcf);
}

QToolBar > QPushButton:!checked:pressed {
    color: white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #555555, stop:1 #717171);
}

QToolBar > QPushButton:checked:disabled,
QToolBar > QPushButton:!checked:disabled {
    border: none;
    background-color: transparent;
}

QToolBar > QToolButton {
    margin: 2px;
    padding: 2px;
    border-radius: 3px;
}

QToolBar > QToolButton:hover {
    background-color: rgba(0,0,0,20);
}

QToolBar > QToolButton:pressed {
    background-color: rgba(0,0,0,30);
}

/* ToolBar menu buttons (buttons with drop-down menu) */
QToolBar > QToolButton#qt_toolbutton_menubutton {
    padding-right: 20px; /* Hack to add more width to buttons with menu */
    border: 1px solid transparent;
    border-radius: 3px;
}

QToolBar > QToolButton#qt_toolbutton_menubutton:hover,
QToolBar > QToolButton#qt_toolbutton_menubutton:pressed,
QToolBar > QToolButton#qt_toolbutton_menubutton:open {
    border: 1px solid #7cabf9;
}

QToolBar QToolButton::menu-button,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button {
    border: none;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    width: 16px; /* 16px width + 4px for border = 20px allocated above */
    outline: none;
    background-color: transparent;
}

QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:hover,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:pressed,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:open {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 rgb(89, 102, 120), stop:1 #7cabf9);
}

QToolBar > QToolButton::menu-arrow {
    background-image: url(qss:images/down_arrow_dark.png);
    background-position: center center;
    background-repeat: none;
    subcontrol-origin: padding;
    subcontrol-position: bottom right;
    height: 10px; /* same as arrow image */
}

QToolBar > QToolButton::menu-arrow:hover {
    background-image: url(qss:images/down_arrow_lighter.png);
}

QToolBar > QToolButton::menu-arrow:open {
    background-image: url(qss:images/down_arrow_lighter.png);
}

/* when QToolButton is checked: */
QToolBar > QToolButton:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #4771b3, stop:1 #638dcf);
    border: 1px solid #3d6199;
    border-top-color: #284066;
}

QToolBar > QToolButton:checked:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #557cba, stop:1 #6f96d3);
}

QToolBar > QToolButton:checked:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #638dcf, stop:1 #4771b3);
    border: 1px solid #3d6199;
    border-bottom-color: #284066;
}

QToolBar > QToolButton:!checked:pressed {
    background-color: rgba(0,0,0,20);
    border: none;
}

/*The "show more" button  (it can also be stylable with "QToolBarExtension" */
QToolBar QToolButton#qt_toolbar_ext_button {
    margin: 0px;
    padding: 0px;
    /*background-image: url(qss:images/more_dark.png);*/
    image: transparent;
    background-repeat: none;
    background-position: center left;
}

QToolBar QToolButton#qt_toolbar_ext_button:hover {
    /*background-image: url(qss:images/more_light.png);*/
    border-color: #212121;
    background-color: #212121;
}

QToolBar QToolButton#qt_toolbar_ext_button:on {
    /*background-image: url(qss:images/more_light.png);*/
    border-color: #212121;
    background-color: #212121;
}


/*==================================================================================================
Tables (spreadsheets)
==================================================================================================*/
QTableView {
    gridline-color: rgb(30,30,30);
    selection-color: #1b3774;
    selection-background-color: #cbd8e6;
}

QTableView::item:hover  {
    background-color: rgba(0,0,0,10);  /* temporal: is it displayed in Linux or Windows? on OSX it isn't */
}

QTableView::item:disabled  {
   /* color: #8c8c8c; */
}

QTableView::item:selected  {
    color: white; /* should be similar to QListView selection-color */
    background-color: rgb(89, 102, 120); /* should be similar to QListView selection-background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
}

/* fix for elements inside the cells */
QTableView > QWidget > QComboBox,
QTableView > QWidget > QAbstractSpinBox,
QTableView > QWidget > QSpinBox,
QTableView > QWidget > QDoubleSpinBox,
QTableView > QWidget > QLineEdit,
QTableView > QWidget > QTextEdit,
QTableView > QWidget > QPlainTextEdit,
QTableView > QWidget > QTimeEdit,
QTableView > QWidget > QDateEdit,
QTableView > QWidget > QDateTimeEdit,
QTableView > QWidget > QComboBox:drop-down,
QTableView > QWidget > QAbstractSpinBox:up-button,
QTableView > QWidget > QSpinBox:up-button,
QTableView > QWidget > QDoubleSpinBox:up-button,
QTableView > QWidget > QTimeEdit:up-button,
QTableView > QWidget > QDateEdit:up-button,
QTableView > QWidget > QDateTimeEdit:up-button,
QTableView > QWidget > QAbstractSpinBox:down-button,
QTableView > QWidget > QSpinBox:down-button,
QTableView > QWidget > QDoubleSpinBox:down-button,
QTableView > QWidget > QTimeEdit:down-button,
QTableView > QWidget > QDateEdit:down-button,
QTableView > QWidget > QDateTimeEdit:down-button,
QTableView > QWidget > Gui--ColorButton {
    border-radius: 0px;
}

QTableView > QWidget > QComboBox,
QTableView > QWidget > QAbstractSpinBox,
QTableView > QWidget > QSpinBox,
QTableView > QWidget > QDoubleSpinBox,
QTableView > QWidget > QLineEdit,
QTableView > QWidget > QTextEdit,
QTableView > QWidget > QPlainTextEdit,
QTableView > QWidget > QTimeEdit,
QTableView > QWidget > QDateEdit,
QTableView > QWidget > QDateTimeEdit {
    color: black;
    background-color: transparent;
    border-color: transparent;
}

QTableView > QWidget > QComboBox:drop-down,
QTableView > QWidget > QAbstractSpinBox:up-button,
QTableView > QWidget > QSpinBox:up-button,
QTableView > QWidget > QDoubleSpinBox:up-button,
QTableView > QWidget > QTimeEdit:up-button,
QTableView > QWidget > QDateEdit:up-button,
QTableView > QWidget > QDateTimeEdit:up-button,
QTableView > QWidget > QAbstractSpinBox:down-button,
QTableView > QWidget > QSpinBox:down-button,
QTableView > QWidget > QDoubleSpinBox:down-button,
QTableView > QWidget > QTimeEdit:down-button,
QTableView > QWidget > QDateEdit:down-button,
QTableView > QWidget > QDateTimeEdit:down-button,
QTableView > QWidget > Gui--ColorButton {
    background-color: rgba(0,0,0,30);
}

QTableView > QWidget > QComboBox:focus,
QTableView > QWidget > QAbstractSpinBox:focus,
QTableView > QWidget > QSpinBox:focus,
QTableView > QWidget > QDoubleSpinBox:focus,
QTableView > QWidget > QLineEdit:focus,
QTableView > QWidget > QTextEdit:focus,
QTableView > QWidget > QPlainTextEdit:focus,
QTableView > QWidget > QTimeEdit:focus,
QTableView > QWidget > QDateEdit:focus,
QTableView > QWidget > QDateTimeEdit:focus {
    color: #1b3774;
    selection-color: white;
    selection-background-color: rgb(89, 102, 120);
    border-color: #cbd8e6;
    background-color: #cbd8e6;
}

QTableView > QWidget > QComboBox:disabled,
QTableView > QWidget > QAbstractSpinBox:disabled,
QTableView > QWidget > QSpinBox:disabled,
QTableView > QWidget > QDoubleSpinBox:disabled,
QTableView > QWidget > QLineEdit:disabled,
QTableView > QWidget > QTextEdit:disabled,
QTableView > QWidget > QPlainTextEdit:disabled,
QTableView > QWidget > QTimeEdit:disabled,
QTableView > QWidget > QDateEdit:disabled,
QTableView > QWidget > QDateTimeEdit:disabled {
    color: rgba(0,0,0,120);
    background-color: transparent;
    border-color: transparent;
}

QTableView > QWidget > QComboBox:read-only,
QTableView > QWidget > QAbstractSpinBox:read-only,
QTableView > QWidget > QSpinBox:read-only,
QTableView > QWidget > QDoubleSpinBox:read-only,
QTableView > QWidget > QLineEdit:read-only,
QTableView > QWidget > QTextEdit:read-only,
QTableView > QWidget > QPlainTextEdit:read-only,
QTableView > QWidget > QTimeEdit:read-only,
QTableView > QWidget > QDateEdit:read-only,
QTableView > QWidget > QDateTimeEdit:read-only {
    color: black;
    background-color: transparent;
    border-color: transparent;
}


/*==================================================================================================
EXPERIMENTAL
==================================================================================================*/

/* Fix for preventing elements in different rows to accidentaly overlap */
QDialog QGroupBox QFrame {
    margin: 2px 0px;
}

*[mandatoryField="true"] { background-color: cyan }